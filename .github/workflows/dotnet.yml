# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
  IMAGE_NAME: ms-prodution

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: install dotnet-scanner
        run: dotnet tool install --global dotnet-sonarscanner 
      - name: install dotnet-coverage
        run: dotnet tool install --global dotnet-coverage
      - name: Sonar Begin
        run: dotnet sonarscanner begin /k:${{ secrets.SONAR_PROJECT }}
         /o:${{ secrets.SONAR_ORGANIZATION }} 
         /d:sonar.token=${{ secrets.SONAR_TOKEN }} 
         /d:sonar.host.url=${{ secrets.SONAR_HOST_URL }}
         /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
      - name: Build
        run: dotnet build
      - name: Test Coverage
        run: dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
      - name: Sonar End
        run : dotnet sonarscanner end /d:sonar.token=${{ secrets.SONAR_TOKEN }}

  push_to_registry:
    name: Push Docker image to Registry
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ vars.DOCKER_IMAGE }}
          tags: latest
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}